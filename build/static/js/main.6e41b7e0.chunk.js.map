{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Person","contact","deleteHandler","name","number","onClick","Filter","change","search","onSubmit","onChange","PersonForm","add","nameChange","numberChange","type","baseUrl","axios","get","then","response","data","newContact","post","id","put","request","delete","console","log","Notification","message","nature","style","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notificationMessage","setNotificationMessage","messageNature","setMessageNature","personsFiltered","person","toUpperCase","includes","useEffect","phonebookService","allContacts","catch","error","setTimeout","event","target","value","preventDefault","newPerson","map","p","window","confirm","find","modifiedContact","remainingPersons","addedContact","concat","contactName","contactRemoved","deleteContactHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e41b7e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({contact, deleteHandler}) => {\r\n    return <p> {contact.name} : {contact.number} <button onClick={deleteHandler}>Delete</button></p>\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nconst Filter = ({change, search}) => {\r\n    return (\r\n            <div>\r\n                <form onSubmit={search}>\r\n                    <div>\r\n                        filter form with <input onChange={change}/>\r\n                        {/* <button type=\"submit\">Search</button> */}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({add, nameChange, numberChange}) => {\r\n    return (\r\n            <div>\r\n                <form onSubmit={add}>\r\n                <div>\r\n                    name: <input onChange={nameChange}/>\r\n                </div>\r\n                <div>\r\n                    phone number: <input onChange={numberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default PersonForm;","import axios from 'axios';\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\n// server for developping the frontend\r\n// const baseUrl = \"http://localhost:3001/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newContact => {\r\n    const request = axios.post(baseUrl, newContact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newContact) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newContact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    \r\n    request.then(response => {\r\n        console.log(response);\r\n    })\r\n    \r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from 'react'\r\n\r\nconst Notification = ({message, nature}) => {\r\n    let style = 'error';\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (nature === 'sucess') {\r\n        style = 'sucess'\r\n    }\r\n    return (\r\n        <div className={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\n\nimport Person from './components/Person';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport phonebookService from './services/phonebook';\nimport Notification from './components/Notification';\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [messageNature, setMessageNature] = useState('')\n\n  // const personsList = persons.map(p => p.name);\n\n  const personsFiltered = filter ? persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase())) : [...persons];\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(allContacts => {\n        setPersons(allContacts);\n        setNotificationMessage(null);\n      })\n      .catch(error => {\n        setNotificationMessage(error.response.data.message);\n        setMessageNature('error')\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    // Check if the person is already in cantact list\n    // In which case just update the person.\n    if (persons.map(p => p.name).includes(newName)) {\n      if (window.confirm(`Do you really want to modify ${newName}?`)) {\n        const person = persons.find(person => person.name === newName)\n        phonebookService\n          .update(person.id, newPerson)\n          .then(modifiedContact => {\n            // filter out the contact to modify so as to set the new one in the list\n            const remainingPersons = persons.filter(person => person.name !== newName);\n            console.log('remainingPersons: ', remainingPersons);\n            setMessageNature('sucess');\n            setNotificationMessage(`Modified ${modifiedContact.name}`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setNotificationMessage(error.response.data.message);\n            setMessageNature('error')\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n      }\n      return \n    }\n\n      phonebookService\n        .create(newPerson)\n        .then(addedContact => {\n          setPersons(persons.concat(addedContact));\n          setMessageNature('sucess');\n          setNotificationMessage(`Added ${addedContact.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setNotificationMessage(error.response.data.message);\n          setMessageNature('error')\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        });\n\n  } \n\n  const deleteContactHandler = (contactName) => {\n    const contact = persons.find(person => person.name === contactName);\n    if (window.confirm(`Do you really want to delete ${contactName}?`)) {\n      phonebookService\n        .remove(contact.id)\n        .then(contactRemoved => {\n          console.log(\"contactRemoved: \", contactRemoved);\n          setPersons(persons.filter(person => person.id !== contact.id));\n          setNotificationMessage(`Removed ${contactRemoved.name}`);\n          setMessageNature('sucess')\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n      })\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} nature={messageNature} />\n\n      <Filter change={handleFilterChange}/>\n\n      <h3>add a new </h3>\n\n      <PersonForm add={handleAdd} nameChange={handleNameChange} numberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      {personsFiltered.map(person => {\n        return <Person \n                  key={person.name} \n                  contact={person} \n                  deleteHandler={() => deleteContactHandler(person.name)} \n                />\n      })}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}